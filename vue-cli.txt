	1.基础使用	
		安装nodejs
		安装vue-cli
		初始化项目vue init webpack 项目名称
		cd 项目名称
		安装依赖npm install
		开始运行npm run dev
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
	1.使用element-ui
	npm install element-ui --save
	main.js
		import Vue from 'vue'
		import ElementUI from 'element-ui'
		import 'element-ui/lib/theme-default/index.css'
		import App from './App.vue'

		Vue.use(ElementUI)

		new Vue({
		  el: '#app',
		  render: h => h(App)
		})
	<template>
		<el-carousel :interval="4000" type="card" height="200px">
			<el-carousel-item v-for="item in 6" :key="item">
			  <h3>{{ item }}</h3>
			</el-carousel-item>
		  </el-carousel>
	</template>
	2.使用sass
		npm install node-sass --save-dev  
		npm install sass-loader --save-dev 
		在webpack.base.conf.js中module: { rules: [
		{  
	        test: /\.scss$/,  
	        loaders: ["style", "css", "sass"]  
	      },  
		<style lang="scss" scoped="" type="text/css"></style>  
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》	
	3.使用axios
	    npm install axios qs -s
	    在main.js引入
	    import axios from 'axios'
		import qs from 'qs'
		
	  	Vue.prototype.$Axios = axios
		Vue.prototype.$qs = qs
	    使用
	 	this.$Axios.post(
	 	  that.myurl + "/login",
	 	  that.$qs.stringify({
	 	    phone: that.phone,
	 	    type:1
	 	  })
	 	)
	 	.then(function(res){
	 	  console.log(res.data.data)
	 	})
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》				
	4.使用swiper
		npm install vue-awesome-swiper --save-dev
		main.js
			import VueAwesomeSwiper from 'vue-awesome-swiper'
			import 'swiper/dist/css/swiper.css'
		
			Vue.use(VueAwesomeSwiper)
		使用
			<swiper :options="swiperOption" ref="mySwiper">
				<!-- 这部分放你要渲染的那些内容 -->
				<swiper-slide>
					<img src="../../assets/1.png" />
				</swiper-slide>
				<swiper-slide>
					<img src="../../assets/2.png" />
				</swiper-slide>
				<swiper-slide>
					<img src="../../assets/3.png" />
				</swiper-slide>
				<swiper-slide>
					<img src="../../assets/4.png" />
				</swiper-slide>
				<!-- 这是轮播的小圆点 -->
				<div class="swiper-pagination" slot="pagination"></div>
				<div class="swiper-button-prev" slot="button-prev"></div>
				<div class="swiper-button-next" slot="button-next"></div>
			</swiper>
			import { swiper, swiperSlide } from 'vue-awesome-swiper'
			data() {
				return {
					swiperOption: {
						autoplay: {
							stopOnLastSlide: true,
						},
						loop: true,
						pagination: {
							el: '.swiper-pagination'
						},
						navigation: {
							nextEl: '.swiper-button-next',
							prevEl: '.swiper-button-prev'
						},
					}
				}
			},
			components: {
				swiper,
				swiperSlide
			},
			computed: {
				swiper() {
					return this.$refs.mySwiper.swiper;
				}
			},
			禁止滑动
			class='swiper-no-swiping'
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》				
	5.使用vuex
		 	npm install vuex -s
		main.js
			import Vuex from 'vuex'
			import store from './vuex/store'
			new Vue({
			  el: '#app',
			  router,
			  store,
			  render: h => h(App)
			})
		store.js
			import Vue from 'vue'
			import Vuex from 'vuex'
			
			Vue.use(Vuex)
			
			const store = new Vuex.Store({
			  // 定义状态
			  state: {
			    
			  }
			})
			
			export default store
		获取vuex值
			 computed: {
			      back () {	
			        return this.$store.state.back
			      },
			      head () {	
			        return this.$store.state.head
			      }
			    }
		
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》				
	6.按需引入组件
			MyHeader:resolve => require(['./header'],resolve),
			MyFooter:resolve => require(['./footer'],resolve)
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》				
	7.按需路由
			routes: [{
				path: '/home',
				name: 'home',
				component: resolve => require(['@/components/home/home'], resolve)
			}
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》			
	8.动画
		.fade-enter-active, .fade-leave-active {
		transform: translateX(0);
			 transition: all .6s;
		}
		.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {
			transform: translateX(-100%);
		}
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》			
	9.js控制路由
		this.$router.push({
			name: '' + target + ''
		});
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》				
	10.使用高德地图
			在index.html
					<script type="text/javascript" src="http://webapi.amap.com/maps?v=1.4.4&key=3adc59b361b877d943cda0ce50b9b4da"></script>
    				<script src="http://webapi.amap.com/ui/1.0/main.js" type="text/javascript" charset="utf-8"></script>
    		
    		webpack.base.conf.js
    				externals: {
				   	 'AMap': 'AMap'
					}
			vue	
				import AMap from 'AMap'
				
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》			
	11.相机和相册
		data{
			server:'http://39.107.70.18/Transportation/uploadDriverImage',
			files:[],
			uploadtarget: ''
		}
		methods:{
			upload: function(target) {
				var that = this
				that.files=[]
				that.uploadtarget = target
				var btnArray = [{
					title: "照相机"
				}, {
					title: "相册"
				}]; //选择按钮  1 2 3
				plus.nativeUI.actionSheet({
					title: "请选择",
					cancel: "取消", // 0
					buttons: btnArray
				}, function(e) {
					var index = e.index; // 
					switch(index) {
						case 1:
							//写自己的逻辑
							that.camera();
							break;
						case 2:
							that.album();
							break;
					}
				});
			},
			camera: function() {
				console.log('相机')
				var that = this
				var cmr = plus.camera.getCamera();
				cmr.captureImage(function(p) {
					//成功
					plus.io.resolveLocalFileSystemURL(p, function(entry) {
						var img_name = entry.name; //获得图片名称
						var img_path = entry.toLocalURL(); //获得图片路径
						document.getElementById('img' + that.uploadtarget).setAttribute('src', img_path)
						that.upload_img(img_path);
					}, function(e) {
						alert("读取拍照文件错误：" + e.message);
					});

				}, function(e) {
					alert("失败：" + e.message);
				}, {
					filename: '_doc/camera/',
					index: 1
				}); //  “_doc/camera/“  为保存文件名
			},
			album: function() {
				console.log('相册')
				var that = this
				plus.gallery.pick(function(path) {
					document.getElementById('img' + that.uploadtarget).setAttribute('src', path)
					that.upload_img(path);
				}, function(e) {
					alert("取消选择图片");
				}, {
					filter: "image"
				});
			},
			upload_img: function(p) {
				var that = this
				var n = p.substr(p.lastIndexOf('/') + 1);
				that.files.push({
					name: "uploadkey",
					path: p
				});
				//开始上传
				that.start_upload();
			},
			start_upload: function() {
				var that=this
				if(that.files.length <= 0) {
					plus.nativeUI.alert("没有添加上传文件！");
					return;
				}
				//原生的转圈等待框
				var wt = plus.nativeUI.showWaiting();
				var task = plus.uploader.createUpload(that.server, {
						method: "POST"
					},
					function(t, status) { //上传完成
						if(status == 200) {
							//资源
							var responseText = t.responseText;
							//转换成json
							var json = eval('(' + responseText + ')');
							//上传文件的信息
							that.files = json.data;
							wt.close();
						} else {
							alert("上传失败：" + status);
							//关闭原生的转圈等待框
							wt.close();
						}
					});
				task.addData("uid", that.getUid());
				for(var i = 0; i < that.files.length; i++) {
					var f = that.files[i];
					task.addFile(f.path, {
						key: f.name
					});
				}
				task.start();
			},
			getUid: function() {
				return Math.floor(Math.random() * 100000000 + 10000000).toString();
			}
		}
		--------------------base64上传图片------------------
		upload: function(target) {
				var that = this
				that.files = []
				that.uploadtarget = target
				var btnArray = [{
					title: "照相机"
				}, {
					title: "相册"
				}]; //选择按钮  1 2 3
				plus.nativeUI.actionSheet({
					title: "请选择",
					cancel: "取消",
					buttons: btnArray
				}, function(e) {
					var index = e.index;
					switch(index) {
						case 1:
							that.camera();
							break;
						case 2:
							that.album();
							break;
					}
				});
			},
			camera: function() {
				var that = this
				var cmr = plus.camera.getCamera();
				cmr.captureImage(function(p) {
					//成功
					plus.io.resolveLocalFileSystemURL(p, function(entry) {
						var img_name = entry.name;
						var img_path = entry.toLocalURL();
						document.getElementById(that.uploadtarget).setAttribute('src', img_path)
						that.upload_img(img_path);
					}, function(e) {
						alert("读取拍照文件错误：" + e.message);
					});

				}, function(e) {
					alert("失败：" + e.message);
				}, {
					filename: '_doc/camera/',
					index: 1
				});
			},
			album: function() {
				var that = this
				plus.gallery.pick(function(path) {
					document.getElementById(that.uploadtarget).setAttribute('src', path)
					that.upload_img(path);
				}, function(e) {
					alert("取消选择图片");
				}, {
					filter: "image"
				});
			},
			upload_img: function(p) {
				var thats = this
				var img = new Image();
				img.src = p; // 传过来的图片路径在这里用。
				img.onload = function() {
					var that = this;
					//生成比例 
					var w = that.width,
						h = that.height,
						scale = w / h;
					w = 280 || w; //480  你想压缩到多大，改这里
					h = w / scale;
					//生成canvas
					var canvas = document.createElement('canvas');
					var ctx = canvas.getContext('2d');
					$(canvas).attr({
						width: w,
						height: h
					});
					ctx.drawImage(that, 0, 0, w, h);
					$.ajax({
						type: "post",
						url: thats.myurl + '/imageRiderImageUsTraderStores',
						dataType: 'json',
						data: {
							imgStr: canvas.toDataURL('image/jpeg', 1 || 0.8)
						},
						success: function(res) {
							
						}
					});
				}
			}
		》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
	12.使用地址选择插件
			npm install v-distpicker --save
			import VDistpicker from 'v-distpicker'
		
			export default {
			  components: { VDistpicker }
			}
			
				
			Default Value:
			
			<v-distpicker province="广东省" city="广州市" area="海珠区"></v-distpicker>
			Mobile:
			
			<v-distpicker type="mobile"></v-distpicker>
			
			<v-distpicker type="mobile" @selected="onSelected"></v-distpicker>
			

		  	onSelected:function(data){
				this.$store.state.citydata = data.province.value + data.city.value + data.area.value
				console.log(this.$store.state.citydata)
			},
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》		
	13.子组件调用父组件方法
		Parent.vue
		 <child @citychange="citychange"></child>
		 
		  methods: {
	            citychange () {
	                
	            }
	        },
		 
		Child.vue
			this.$emit('citychange');
		
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》	
	14.使用echart图表	
		cnpm install echarts -S
		
		import echarts from 'echarts'
		
		<div id="myChart"></div>
		
		let myChart = echarts.init(document.getElementById('myChart'))
		myChart.setOption(option)
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》		
	15.日期选择插件
		npm install vue-date-time-m
		main.js	
			import dateTime from 'vue-date-time-m';
			Vue.component('data-time', dateTime);
			
			<div class="date-time-input" @click="show">{{ data }}</div>
            <date-time ref="dateTime"
                         type="date" //datetime
                         @confirm="select"></date-time>
			
			import DateTime from 'vue-date-time-m'
	          export default {
	            data(){
	              return {
	                data: ''
	              }
	            },
	            components: {
	              DateTime
	            },
	            methods: {
	              //  展示日期组件
	              show () {
	                this.$refs.dateTime.show()
	              },
	              // 日期组件回调
	              select (val) {
	                this.data = val
	              }
	            }
	          }
	
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》	
	16.使用jquery
		npm install jquery --save-dev 
		
		build文件夹下的webpack.base.conf.js
		
		var webpack=require('webpack')
		
		在module.exports中加入
		plugins: [ 
	           new webpack.ProvidePlugin({ 
	                 $:"jquery", 
	                 jQuery:"jquery", 
	                "windows.jQuery":"jquery"
	        }) 
	      ]
      
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》	
	17.formData
		<form @submit.prevent="submit($event)">
		
		submit: function(event) {
			var formData = new FormData(event.target);
			$.ajax({
					type: "post",
					url: that.service + "/register",
					dataType: 'json',
					contentType: false,
					processData: false,
					data: formData,
					success: function(res) {
						if(res.status != 200) {
							alert(res.msg)
							return
						}
						that.opennew('login')
					}
				});
		}
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》	
	19.:src失效
		picPath: require('../../static/creame.png'),
	
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》	
	20.keep-alive
		<keep-alive>
			<router-view v-if="$route.meta.keepAlive" class="child-view"></router-view>
		</keep-alive>
		<router-view v-if="!$route.meta.keepAlive" class="child-view"></router-view>  
				
		{
	      path: '/wwang',
	      name: 'wwang',
	      component:resolve => require(['@/components/wadmin/wwang'], resolve),
	      meta: { keepAlive: true}  
	    }
    
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
	21.背景图片
		build/utils/
		 if (options.extract) {
	      return ExtractTextPlugin.extract({
	        use: loaders,
	        fallback: 'vue-style-loader',
	        publicPath:'../../',
	      })
	    } else {
	      return ['vue-style-loader'].concat(loaders)
	    }
    
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
	22.图片懒加载
		vue-lazyload
		1. 安装插件：npm install vue-lazyload --save-dev
		2. main.js引入插件：import VueLazyLoad from 'vue-lazyload' Vue.use(VueLazyLoad,{ error:'./static/error.png', loading:'./static/loading.png'})
		3. vue文件中将需要懒加载的图片绑定 v-bind:src 修改为 v-lazy<img class="item-pic" v-lazy="newItem.picUrl"/>
	
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
	23.不生成map文件
		confgi/index.js -> productionSourceMap: false,
	
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
	24.css只对当前组件生效
	
		<style lang="scss" scoped>
		
		</style>
	》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
	25.移动端click延迟
		npm install fastclick -S
		
		import FastClick from 'fastclick'
	
		FastClick.attach(document.body);
		
	26.跳转不返回上一页
		replace